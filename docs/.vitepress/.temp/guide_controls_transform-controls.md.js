import { defineComponent, ref, shallowReactive, unref, withCtx, mergeProps, createVNode, useSSRContext } from "vue";
import { ssrRenderComponent, ssrRenderAttr, ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { TresCanvas } from "@tresjs/core";
import { BasicShadowMap, SRGBColorSpace, NoToneMapping } from "three";
import { b as bx, R as Rx, _ as __unplugin_components_0 } from "./DocsDemo.b6cdbb3e.js";
import { useControls, TresLeches } from "@tresjs/leches";
import "./style.5bad974e.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
import "tweakpane";
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "TransformControlsDemo",
  __ssrInlineRender: true,
  setup(__props) {
    const gl = {
      clearColor: "#201919",
      shadows: true,
      alpha: false,
      shadowMapType: BasicShadowMap,
      outputColorSpace: SRGBColorSpace,
      toneMapping: NoToneMapping
    };
    const boxRef = ref();
    const transformState = shallowReactive({
      showX: true,
      showY: true,
      showZ: true
    });
    const { value: mode } = useControls({
      mode: {
        value: "translate",
        options: [{
          text: "Translate",
          value: "translate"
        }, {
          text: "Rotate",
          value: "rotate"
        }, {
          text: "Scale",
          value: "scale"
        }]
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(TresLeches), { class: "top-0 important-left-4" }, null, _parent));
      _push(ssrRenderComponent(unref(TresCanvas), gl, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<TresPerspectiveCamera${ssrRenderAttr("position", [11, 11, 11])}${ssrRenderAttr("fov", 45)}${ssrRenderAttr("near", 0.1)}${ssrRenderAttr("far", 1e3)}${ssrRenderAttr("look-at", [-8, 3, -3])}${_scopeId}></TresPerspectiveCamera>`);
            _push2(ssrRenderComponent(unref(bx), { "make-default": "" }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(Rx), mergeProps({ object: boxRef.value }, unref(transformState), { mode: unref(mode) }), null, _parent2, _scopeId));
            _push2(`<TresMesh${ssrRenderAttr("position", [0, 4, 0])} cast-shadow${_scopeId}><TresBoxGeometry${ssrRenderAttr("args", [1.5, 1.5, 1.5])}${_scopeId}></TresBoxGeometry><TresMeshToonMaterial color="#FBB03B"${_scopeId}></TresMeshToonMaterial></TresMesh><TresMesh${ssrRenderAttr("rotation", [-Math.PI / 2, 0, 0])} receive-shadow${_scopeId}><TresPlaneGeometry${ssrRenderAttr("args", [10, 10, 10, 10])}${_scopeId}></TresPlaneGeometry><TresMeshToonMaterial${_scopeId}></TresMeshToonMaterial></TresMesh><TresAmbientLight${ssrRenderAttr("intensity", 0.5)}${_scopeId}></TresAmbientLight><TresDirectionalLight${ssrRenderAttr("position", [0, 8, 4])}${ssrRenderAttr("intensity", 1.5)} cast-shadow${_scopeId}></TresDirectionalLight>`);
          } else {
            return [
              createVNode("TresPerspectiveCamera", {
                position: [11, 11, 11],
                fov: 45,
                near: 0.1,
                far: 1e3,
                "look-at": [-8, 3, -3]
              }, null, 8, ["near"]),
              createVNode(unref(bx), { "make-default": "" }),
              createVNode(unref(Rx), mergeProps({ object: boxRef.value }, unref(transformState), { mode: unref(mode) }), null, 16, ["object", "mode"]),
              createVNode("TresMesh", {
                ref_key: "boxRef",
                ref: boxRef,
                position: [0, 4, 0],
                "cast-shadow": ""
              }, [
                createVNode("TresBoxGeometry", { args: [1.5, 1.5, 1.5] }, null, 8, ["args"]),
                createVNode("TresMeshToonMaterial", { color: "#FBB03B" })
              ], 512),
              createVNode("TresMesh", {
                rotation: [-Math.PI / 2, 0, 0],
                "receive-shadow": ""
              }, [
                createVNode("TresPlaneGeometry", { args: [10, 10, 10, 10] }),
                createVNode("TresMeshToonMaterial")
              ], 8, ["rotation"]),
              createVNode("TresAmbientLight", { intensity: 0.5 }, null, 8, ["intensity"]),
              createVNode("TresDirectionalLight", {
                position: [0, 8, 4],
                intensity: 1.5,
                "cast-shadow": ""
              }, null, 8, ["intensity"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/theme/components/TransformControlsDemo.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _imports_0 = "/cientos/transform-controls-translate.png";
const _imports_1 = "/cientos/transform-controls-rotate.png";
const _imports_2 = "/cientos/transform-controls-scale.png";
const transformControls_md_vue_type_style_index_0_scoped_e0a687db_lang = "";
const __pageData = JSON.parse('{"title":"Transform Controls","description":"","frontmatter":{},"headers":[],"relativePath":"guide/controls/transform-controls.md","filePath":"guide/controls/transform-controls.md"}');
const _sfc_main = { name: "guide/controls/transform-controls.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DocsDemo = __unplugin_components_0;
  const _component_TransformControlsDemo = _sfc_main$1;
  _push(`<div${ssrRenderAttrs(_attrs)} data-v-e0a687db><h1 id="transform-controls" tabindex="-1" data-v-e0a687db>Transform Controls <a class="header-anchor" href="#transform-controls" aria-label="Permalink to &quot;Transform Controls&quot;" data-v-e0a687db>​</a></h1><p data-v-e0a687db>The <a href="https://threejs.org/docs/#examples/en/controls/TransformControls" target="_blank" rel="noreferrer" data-v-e0a687db>Transform Controls</a> are a set of three gizmos that can be used to translate, rotate and scale objects in the scene. It adapts a similar interaction model of DCC tools like Blender</p>`);
  _push(ssrRenderComponent(_component_DocsDemo, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_TransformControlsDemo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_TransformControlsDemo)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<h2 id="usage" tabindex="-1" data-v-e0a687db>Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;" data-v-e0a687db>​</a></h2><p data-v-e0a687db>To use the Transform Controls, simply add the <code data-v-e0a687db>TransformControls</code> component to your scene. You can pass the <code data-v-e0a687db>templateRef</code>of the instance you want to control as a prop.</p><div class="language-vue vp-adaptive-theme" data-v-e0a687db><button title="Copy Code" class="copy" data-v-e0a687db></button><span class="lang" data-v-e0a687db>vue</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#85E89D" })}" data-v-e0a687db>script</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>setup</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#F97583" })}" data-v-e0a687db>const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}" data-v-e0a687db>boxRef</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>shallowRef</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>()</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;/</span><span style="${ssrRenderStyle({ "color": "#85E89D" })}" data-v-e0a687db>script</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#85E89D" })}" data-v-e0a687db>template</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>  &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresCanvas</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresPerspectiveCamera</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:args</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;[45, 1, 0.1, 1000]&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>OrbitControls</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>make-default</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresMesh</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>ref</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:position</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;[0, 4, 0]&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>cast-shadow</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>      &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresBoxGeometry</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:args</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;[1.5, 1.5, 1.5]&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>      &lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresMeshToonMaterial</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>color</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;#4F4F4F&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>    &lt;/</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresMesh</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>  &lt;/</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TresCanvas</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;/</span><span style="${ssrRenderStyle({ "color": "#85E89D" })}" data-v-e0a687db>template</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&gt;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#22863A" })}" data-v-e0a687db>script</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>setup</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#D73A49" })}" data-v-e0a687db>const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}" data-v-e0a687db>boxRef</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>shallowRef</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>()</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;/</span><span style="${ssrRenderStyle({ "color": "#22863A" })}" data-v-e0a687db>script</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#22863A" })}" data-v-e0a687db>template</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>  &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresCanvas</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresPerspectiveCamera</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:args</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;[45, 1, 0.1, 1000]&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>OrbitControls</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>make-default</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line highlighted" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>    &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresMesh</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>ref</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:position</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;[0, 4, 0]&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>cast-shadow</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>      &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresBoxGeometry</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:args</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;[1.5, 1.5, 1.5]&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>      &lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresMeshToonMaterial</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>color</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;#4F4F4F&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>    &lt;/</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresMesh</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>  &lt;/</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TresCanvas</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span>
<span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;/</span><span style="${ssrRenderStyle({ "color": "#22863A" })}" data-v-e0a687db>template</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&gt;</span></span></code></pre></div><div class="warning custom-block" data-v-e0a687db><p class="custom-block-title" data-v-e0a687db>WARNING</p><p data-v-e0a687db>If you are using other controls (<a href="/guide/controls/orbit-controls.html" data-v-e0a687db>OrbitControls</a>) they will interfere with each other when dragging. To avoid this, you can set the <code data-v-e0a687db>makeDefault</code> prop to <code data-v-e0a687db>true</code> on the <strong data-v-e0a687db>OrbitControls</strong>.</p></div><h2 id="modes" tabindex="-1" data-v-e0a687db>Modes <a class="header-anchor" href="#modes" aria-label="Permalink to &quot;Modes&quot;" data-v-e0a687db>​</a></h2><p data-v-e0a687db>The Transform Controls can be used in three different modes:</p><h3 id="translate" tabindex="-1" data-v-e0a687db>Translate <a class="header-anchor" href="#translate" aria-label="Permalink to &quot;Translate&quot;" data-v-e0a687db>​</a></h3><p data-v-e0a687db><img${ssrRenderAttr("src", _imports_0)} alt="Translate" data-v-e0a687db></p><p data-v-e0a687db>The default mode allows you to move the object around the scene.</p><div class="language-html vp-adaptive-theme" data-v-e0a687db><button title="Copy Code" class="copy" data-v-e0a687db></button><span class="lang" data-v-e0a687db>html</span><pre class="shiki github-dark vp-code-dark" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;translate&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;sphereRef&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;translate&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;sphereRef&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span></code></pre></div><h3 id="rotate" tabindex="-1" data-v-e0a687db>Rotate <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;Rotate&quot;" data-v-e0a687db>​</a></h3><p data-v-e0a687db><img${ssrRenderAttr("src", _imports_1)} alt="Rotate" data-v-e0a687db></p><p data-v-e0a687db>The rotate mode allows you to rotate the object around the scene.</p><div class="language-html vp-adaptive-theme" data-v-e0a687db><button title="Copy Code" class="copy" data-v-e0a687db></button><span class="lang" data-v-e0a687db>html</span><pre class="shiki github-dark vp-code-dark" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;rotate&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;rotate&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;boxRef&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span></code></pre></div><h3 id="scale" tabindex="-1" data-v-e0a687db>Scale <a class="header-anchor" href="#scale" aria-label="Permalink to &quot;Scale&quot;" data-v-e0a687db>​</a></h3><p data-v-e0a687db><img${ssrRenderAttr("src", _imports_2)} alt="Scale" data-v-e0a687db></p><p data-v-e0a687db>The scale mode allows you to scale the object around the scene.</p><div class="language-html vp-adaptive-theme" data-v-e0a687db><button title="Copy Code" class="copy" data-v-e0a687db></button><span class="lang" data-v-e0a687db>html</span><pre class="shiki github-dark vp-code-dark" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#FDAEB7", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;scale&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}" data-v-e0a687db>&quot;sphereRef&quot;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}" data-v-e0a687db> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light" data-v-e0a687db><code data-v-e0a687db><span class="line" data-v-e0a687db><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>&lt;</span><span style="${ssrRenderStyle({ "color": "#B31D28", "font-style": "italic" })}" data-v-e0a687db>TransformControls</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>mode</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;scale&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}" data-v-e0a687db>:object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db>=</span><span style="${ssrRenderStyle({ "color": "#032F62" })}" data-v-e0a687db>&quot;sphereRef&quot;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}" data-v-e0a687db> /&gt;</span></span></code></pre></div><h2 id="props" tabindex="-1" data-v-e0a687db>Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;" data-v-e0a687db>​</a></h2><table data-v-e0a687db><thead data-v-e0a687db><tr data-v-e0a687db><th style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Prop</th><th style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Description</th><th data-v-e0a687db>Default</th></tr></thead><tbody data-v-e0a687db><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>object</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The instance <a href="https://threejs.org/docs/index.html#api/en/core/Object3D" target="_blank" rel="noreferrer" data-v-e0a687db>Object3D</a> to control.</td><td data-v-e0a687db><code data-v-e0a687db>null</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>mode</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The mode of the controls. Can be <code data-v-e0a687db>translate</code>, <code data-v-e0a687db>rotate</code> or <code data-v-e0a687db>scale</code>.</td><td data-v-e0a687db><code data-v-e0a687db>translate</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>enabled</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>If <code data-v-e0a687db>true</code>, the controls will be enabled.</td><td data-v-e0a687db><code data-v-e0a687db>true</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>axis</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The axis to use for the controls. Can be <code data-v-e0a687db>X</code>, <code data-v-e0a687db>Y</code>, <code data-v-e0a687db>Z</code>, <code data-v-e0a687db>XY</code>, <code data-v-e0a687db>YZ</code>, <code data-v-e0a687db>XZ</code>, <code data-v-e0a687db>XYZ</code>.</td><td data-v-e0a687db><code data-v-e0a687db>XYZ</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>space</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The space to use for the controls. Can be <code data-v-e0a687db>local</code> or <code data-v-e0a687db>world</code>.</td><td data-v-e0a687db><code data-v-e0a687db>local</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>size</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The size of the controls.</td><td data-v-e0a687db><code data-v-e0a687db>1</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>translationSnap</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The distance to snap to when translating. (World units)</td><td data-v-e0a687db><code data-v-e0a687db>null</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>rotationSnap</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The angle to snap to when rotating. (Radians)</td><td data-v-e0a687db><code data-v-e0a687db>null</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>scaleSnap</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>The scale to snap to when scaling.</td><td data-v-e0a687db><code data-v-e0a687db>null</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>showX</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>If <code data-v-e0a687db>true</code>, the X-axis helper will be shown.</td><td data-v-e0a687db><code data-v-e0a687db>true</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>showY</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>If <code data-v-e0a687db>true</code>, the Y-axis helper will be shown.</td><td data-v-e0a687db><code data-v-e0a687db>true</code></td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>showZ</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>If <code data-v-e0a687db>true</code>, the Z-axis helper will be shown.</td><td data-v-e0a687db><code data-v-e0a687db>true</code></td></tr></tbody></table><h2 id="events" tabindex="-1" data-v-e0a687db>Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;" data-v-e0a687db>​</a></h2><table data-v-e0a687db><thead data-v-e0a687db><tr data-v-e0a687db><th style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Event</th><th style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Description</th></tr></thead><tbody data-v-e0a687db><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>dragging</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Fired when the user starts or stops dragging the controls.</td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>change</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Fired when the user changes the controls.</td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>mouseDown</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Fired when the user clicks on the controls.</td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>mouseUp</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Fired when the user releases the mouse button on the controls.</td></tr><tr data-v-e0a687db><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db><strong data-v-e0a687db>objectChange</strong></td><td style="${ssrRenderStyle({ "text-align": "left" })}" data-v-e0a687db>Fired when the user changes the object.</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guide/controls/transform-controls.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const transformControls = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__scopeId", "data-v-e0a687db"]]);
export {
  __pageData,
  transformControls as default
};
